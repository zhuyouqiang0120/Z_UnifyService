package com.zens.unify.entity;

import java.util.ArrayList;
import java.util.List;

public class TaskConfigExample extends Example{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public TaskConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }
        public Criteria andStatusIsNull() {
            addCriterion("FStatus is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("FStatus is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("FStatus =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("FStatus <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("FStatus >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("FStatus >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("FStatus", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("FStatus <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("FStatus in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("FStatus not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("FStatus between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("FStatus not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andFnameIsNull() {
            addCriterion("FName is null");
            return (Criteria) this;
        }

        public Criteria andFnameIsNotNull() {
            addCriterion("FName is not null");
            return (Criteria) this;
        }

        public Criteria andFnameEqualTo(String value) {
            addCriterion("FName =", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameNotEqualTo(String value) {
            addCriterion("FName <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThan(String value) {
            addCriterion("FName >", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThanOrEqualTo(String value) {
            addCriterion("FName >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameLessThan(String value) {
            addCriterion("FName <", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameLessThanOrEqualTo(String value) {
            addCriterion("FName <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameLike(String value) {
            addCriterion("FName like", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameNotLike(String value) {
            addCriterion("FName not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andFnameIn(List<String> values) {
            addCriterion("FName in", values, "name");
            return (Criteria) this;
        }

        public Criteria andFnameNotIn(List<String> values) {
            addCriterion("FName not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andFnameBetween(String value1, String value2) {
            addCriterion("FName between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFnameNotBetween(String value1, String value2) {
            addCriterion("FName not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFurlIsNull() {
            addCriterion("FUrl is null");
            return (Criteria) this;
        }

        public Criteria andFurlIsNotNull() {
            addCriterion("FUrl is not null");
            return (Criteria) this;
        }

        public Criteria andFurlEqualTo(String value) {
            addCriterion("FUrl =", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlNotEqualTo(String value) {
            addCriterion("FUrl <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlGreaterThan(String value) {
            addCriterion("FUrl >", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlGreaterThanOrEqualTo(String value) {
            addCriterion("FUrl >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlLessThan(String value) {
            addCriterion("FUrl <", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlLessThanOrEqualTo(String value) {
            addCriterion("FUrl <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlLike(String value) {
            addCriterion("FUrl like", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlNotLike(String value) {
            addCriterion("FUrl not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andFurlIn(List<String> values) {
            addCriterion("FUrl in", values, "url");
            return (Criteria) this;
        }

        public Criteria andFurlNotIn(List<String> values) {
            addCriterion("FUrl not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andFurlBetween(String value1, String value2) {
            addCriterion("FUrl between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andFurlNotBetween(String value1, String value2) {
            addCriterion("FUrl not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andFcodeIsNull() {
            addCriterion("FCode is null");
            return (Criteria) this;
        }

        public Criteria andFcodeIsNotNull() {
            addCriterion("FCode is not null");
            return (Criteria) this;
        }

        public Criteria andFcodeEqualTo(String value) {
            addCriterion("FCode =", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeNotEqualTo(String value) {
            addCriterion("FCode <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeGreaterThan(String value) {
            addCriterion("FCode >", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeGreaterThanOrEqualTo(String value) {
            addCriterion("FCode >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeLessThan(String value) {
            addCriterion("FCode <", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeLessThanOrEqualTo(String value) {
            addCriterion("FCode <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeLike(String value) {
            addCriterion("FCode like", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeNotLike(String value) {
            addCriterion("FCode not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeIn(List<String> values) {
            addCriterion("FCode in", values, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeNotIn(List<String> values) {
            addCriterion("FCode not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeBetween(String value1, String value2) {
            addCriterion("FCode between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andFcodeNotBetween(String value1, String value2) {
            addCriterion("FCode not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andFcycleIsNull() {
            addCriterion("FCycle is null");
            return (Criteria) this;
        }

        public Criteria andFcycleIsNotNull() {
            addCriterion("FCycle is not null");
            return (Criteria) this;
        }

        public Criteria andFcycleEqualTo(String value) {
            addCriterion("FCycle =", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleNotEqualTo(String value) {
            addCriterion("FCycle <>", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleGreaterThan(String value) {
            addCriterion("FCycle >", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleGreaterThanOrEqualTo(String value) {
            addCriterion("FCycle >=", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleLessThan(String value) {
            addCriterion("FCycle <", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleLessThanOrEqualTo(String value) {
            addCriterion("FCycle <=", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleLike(String value) {
            addCriterion("FCycle like", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleNotLike(String value) {
            addCriterion("FCycle not like", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleIn(List<String> values) {
            addCriterion("FCycle in", values, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleNotIn(List<String> values) {
            addCriterion("FCycle not in", values, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleBetween(String value1, String value2) {
            addCriterion("FCycle between", value1, value2, "cycle");
            return (Criteria) this;
        }

        public Criteria andFcycleNotBetween(String value1, String value2) {
            addCriterion("FCycle not between", value1, value2, "cycle");
            return (Criteria) this;
        }

        public Criteria andFmenuurlIsNull() {
            addCriterion("FMenuUrl is null");
            return (Criteria) this;
        }

        public Criteria andFmenuurlIsNotNull() {
            addCriterion("FMenuUrl is not null");
            return (Criteria) this;
        }

        public Criteria andFmenuurlEqualTo(String value) {
            addCriterion("FMenuUrl =", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlNotEqualTo(String value) {
            addCriterion("FMenuUrl <>", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlGreaterThan(String value) {
            addCriterion("FMenuUrl >", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlGreaterThanOrEqualTo(String value) {
            addCriterion("FMenuUrl >=", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlLessThan(String value) {
            addCriterion("FMenuUrl <", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlLessThanOrEqualTo(String value) {
            addCriterion("FMenuUrl <=", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlLike(String value) {
            addCriterion("FMenuUrl like", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlNotLike(String value) {
            addCriterion("FMenuUrl not like", value, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlIn(List<String> values) {
            addCriterion("FMenuUrl in", values, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlNotIn(List<String> values) {
            addCriterion("FMenuUrl not in", values, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlBetween(String value1, String value2) {
            addCriterion("FMenuUrl between", value1, value2, "menuUrl");
            return (Criteria) this;
        }

        public Criteria andFmenuurlNotBetween(String value1, String value2) {
            addCriterion("FMenuUrl not between", value1, value2, "menuUrl");
            return (Criteria) this;
        }
        public Criteria andFistaskIsNull() {
            addCriterion("FIsTask is null");
            return (Criteria) this;
        }

        public Criteria andFistaskIsNotNull() {
            addCriterion("FIsTask is not null");
            return (Criteria) this;
        }

        public Criteria andFistaskEqualTo(Integer value) {
            addCriterion("FIsTask =", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskNotEqualTo(Integer value) {
            addCriterion("FIsTask <>", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskGreaterThan(Integer value) {
            addCriterion("FIsTask >", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskGreaterThanOrEqualTo(Integer value) {
            addCriterion("FIsTask >=", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskLessThan(Integer value) {
            addCriterion("FIsTask <", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskLessThanOrEqualTo(Integer value) {
            addCriterion("FIsTask <=", value, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskIn(List<Integer> values) {
            addCriterion("FIsTask in", values, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskNotIn(List<Integer> values) {
            addCriterion("FIsTask not in", values, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskBetween(Integer value1, Integer value2) {
            addCriterion("FIsTask between", value1, value2, "isTask");
            return (Criteria) this;
        }

        public Criteria andFistaskNotBetween(Integer value1, Integer value2) {
            addCriterion("FIsTask not between", value1, value2, "isTask");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_task_config
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 16 11:37:55 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_task_config
     *
     * @mbggenerated Wed Jul 16 11:37:55 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}